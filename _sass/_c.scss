@media screen, projection {

// Define variables in _variables.scss
// Then create classes that refer to them here
// Then use these class names in your HTML

// Example: create an alternative sans-serif class
// Define $c-sans-serif in _variables.scss
// Then create a c-sans-serif class here
// Like so:
.c-sans-serif {
    font-family: $c-sans-serif;
}

.c-serif {
    font-family: $c-serif;
}

.c-lh-copy {
    line-height: $c-lh-copy;
    @media #{$breakpoint-medium} {
        line-height: $c-lh-copy-m;
    }
    @media #{$breakpoint-large} {
        line-height: $c-lh-copy-l;
    }
}

.c-font-size {
    font-size: $c-font-size;
    @media #{$breakpoint-medium} {
        font-size: $c-font-size-m;
    }
    @media #{$breakpoint-large} {
        font-size: $c-font-size-l;
    }
}

.c-lh-title {
    line-height: $c-lh-title;
}

.c-wrapper {
    max-width: $c-wrapper;
}

.c-icon {
	color: transparent;
	text-shadow: 0 0 $highlight;
}

.c-highlight {
    color: $highlight;
}

// Prose styling

.c-prose-headings h1,
.c-prose-headings h2,
.c-prose-headings h3,
.c-prose-headings h4,
.c-prose-headings h5,
.c-prose-headings h6,
.c-prose-headings dt {
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
    line-height: $c-lh-title;
    color: #FFF;
}

.c-prose-headings h1 + *,
.c-prose-headings h2 + *,
.c-prose-headings h3 + *,
.c-prose-headings h4 + *,
.c-prose-headings h5 + *,
.c-prose-headings h6 + *,
.c-prose-headings dt + * {
    margin-top: 0;
}

.c-prose-headings h1,
.c-prose-headings h2 {
    font-size: 1.5rem;
}

.c-prose-headings h3 {
    font-size: 1.25rem;
}

.c-prose-headings h4,
.c-prose-headings h5,
.c-prose-headings h6 {
    font-size: 1rem;
}

.c-hyphens {
    hyphens: auto;
    -moz-hyphens: auto;
    -webkit-hyphens: auto;
}

.c-linky-underline a {
    border-bottom: 1px dotted;
}

.c-linky-visited a:link {
    color: #EEE;
}

.c-linky-visited a:visited {
    color: #CCC;
}

.c-linky-visited a:hover,
.c-linky-visited a:active {
    color: $highlight;
}

.c-no-top-margin * {
    margin-top: 0 !important;
}

// Class to constrain parents' children to max-width
// Then add exceptions for elements you want to expand
// to 100% of the available page

/* .c-constrain-kids p,
.c-constrain-kids ul,
.c-constrain-kids ol,
.c-constrain-kids pre,
.c-constrain-kids h1,
.c-constrain-kids h2,
.c-constrain-kids h3,
.c-constrain-kids h4,
.c-constrain-kids h5,
.c-constrain-kids h6,
.c-constrain-kids dt,
.c-constrain-kids dd {
    max-width: $c-wrapper !important;
    margin-left: .5rem;
    margin-right: .5rem;
    @media #{$breakpoint-medium} {
        margin-left: 4rem;
        margin-right: 4rem;
    }
    @media #{$breakpoint-large} {
        margin-left: 8rem;
        margin-right: 8rem;
    }
}

.c-constrain-kids blockquote {
    padding: 0 1rem;
    font-size: 0.875em;
}

.c-constrain-kids figure,
.c-constrain-kids img,
.c-constrain-kids pre,
.c-constrain-kids .vid,
.c-constrain-kids .constrain,
.c-constrain-kids .vid iframe,
.c-constrain-kids .vid object,
.c-constrain-kids .vid embed,
.c-constrain-kids .constrain iframe,
.c-constrain-kids .constrain object,
.c-constrain-kids .constrain embed {
    max-width: 100% !important;
} */

.c-constrain-kids blockquote {
    margin: 2.25rem 0;
    padding-left: 1rem;
    border-left: 0.25rem solid #FFF;
    font-size: 0.875em;
}

.c-constrain-kids img {
    margin: 0.5rem auto;
}

.vid,
.constrain {
    position: relative;
    padding-bottom: 56.25%;
    padding-top: 30px;
    height: 0;
    overflow: hidden;
    margin-bottom: 1.5rem;
}

.vid iframe,
.vid object,
.vid embed,
.constrain iframe,
.constrain object,
.constrain embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}


// More defaults

a {
    text-decoration: none;
}

abbr {
    cursor: help;
}

figure {
    margin: auto 0;
}

code {
    font-size: 0.875em;
    padding: 0.1em 0.25em;
    background-color: #EEE;
    color: #333;
}

pre {
    overflow: auto;
    padding: 1em;
    background-color: #000;
    color: $highlight;
}

pre code {
    padding: 0;
    background-color: inherit;
    color: $highlight;
}

hr {
    overflow: visible; /* For IE */
    border: none;
    border-top: medium double #CCC;
    text-align: center;
}

table {
    min-width: 100%;
    overflow: auto;
    border-collapse: collapse;
    table-layout: fixed;
}

thead {
    text-align: left;
}

th {
    padding: 0.25rem;
    border-bottom: 1px solid #333;
    margin: 0;
}

td {
    padding: 0.25rem;
    border-bottom: 1px solid #CCC;
    margin: 0;
}

*:focus {
    outline: 3px solid #FFB700;
}



// Some empty media queries
// Use these if you want to make responsive custom classes

@media #{$breakpoint-not-small} {
}

@media #{$breakpoint-medium} {
}

@media #{$breakpoint-large} {
}


} // End the enclosing screen/projection media query


// Print styles

@media print {

* {
  background-color: white !important;
  color: black !important;
  font-family: $c-sans-serif;
  line-height: 1.375;
}

.measure {
  width: 100%;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1.1;
  margin-top: 2em;
}

img {
  max-width: 100% !important;
  height: auto !important;
}

.c-no-print {
  display: none;
}


}
